
rmd {
  fileUI {
    use = false
    use = ${?USE_FILE_UI}
    file = "status.txt"
    file = ${?FILE_UI}
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  //loggers = ["akka.event.slf4j.Slf4jEventHandler"]
  loglevel = WARNING

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    //    debug {
    //      fsm = on
    //      lifecycle = on
    //    }

    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "defend.shard.FsmProtocol$AddExperience" = kryo,
      "defend.shard.FsmProtocol$ScheduledStateChangeAgUpdate" = kryo,
      "defend.shard.FsmProtocol$UpdateSelf" = kryo,
      "defend.shard.MessageLostTracker$LastMessageId" = kryo,
      "defend.PersistenceMonitor$Save" = kryo,
      "defend.model.WarTheater" = kryo,
      "defend.model.OptionalWarTheater" = kryo,
      "defend.game.GameEngine$Protocol$AlienRocketFired" = kryo
      "defend.game.GameEngine$Protocol$RocketFired" = kryo,
      "defend.shard.TowerActor$Protocol$Situation" = kryo,
      "defend.shard.TowerActor$Protocol$MessageOfDeath" = kryo,
      "defend.shard.TowerActor$Protocol$ExperienceGained" = kryo,
    }

    kryo {
      # Possibles values for type are: graph or nograph
      # graph supports serialization of object graphs with shared nodes
      # and cyclic references, but this comes at the expense of a small
      # overhead nograph does not support object grpahs with shared nodes,
      # but is usually faster
      type = "graph"

      # Possible values for idstrategy are:
      # default, explicit, incremental
      #
      # default - slowest and produces bigger serialized representation.
      # Contains fully-qualified class names (FQCNs) for each class. Note
      # that selecting this strategy does not work in version 0.3.2, but
      # is available on master and from 0.3.3 onward.
      #
      # explicit - fast and produces compact serialized representation.
      # Requires that all classes that will be serialized are pre-registered
      # using the "mappings" and "classes" sections. To guarantee that both
      # sender and receiver use the same numeric ids for the same classes it
      # is advised to provide exactly the same entries in the "mappings"
      # section.
      #
      # incremental - fast and produces compact serialized representation.
      # Support optional pre-registering of classes using the "mappings"
      # and "classes" sections. If class is not pre-registered, it will be
      # registered dynamically by picking a next available id To guarantee
      # that both sender and receiver use the same numeric ids for the same
      # classes it is advised to pre-register them using at least the "classes" section.

      idstrategy = "default"

      # Define a default size for serializer pool
      # Try to define the size to be at least as big as the max possible
      # number of threads that may be used for serialization, i.e. max
      # number of threads allowed for the scheduler
      serializer-pool-size = 16

      # Define a default size for byte buffers used during serialization
      buffer-size = 4096

      # The serialization byte buffers are doubled as needed until they
      # exceed max-buffer-size and an exception is thrown. Can be -1
      # for no maximum.
      max-buffer-size = -1

      # If set, akka uses manifests to put a class name
      # of the top-level object into each message
      use-manifests = false

      # The transformations that have be done while serialization
      # Supported transformations: compression and encryption
      # accepted values(comma separated if multiple): off | lz4 | deflate | aes
      # Transformations occur in the order they are specified
      post-serialization-transformations = "lz4"

      # Log implicitly registered classes. Useful, if you want to know all
      # classes which are serialized. You can then use this information in
      # the mappings and/or classes sections
      implicit-registration-logging = true

      # If enabled, Kryo logs a lot of information about serialization process.
      # Useful for debugging and lowl-level tweaking
      kryo-trace = false

      # Define mappings from a fully qualified class name to a numeric id.
      # Smaller ids lead to smaller sizes of serialized representations.
      #
      # This section is mandatory for idstartegy=explicit
      # This section is optional  for idstartegy=incremental
      # This section is ignored   for idstartegy=default
      #
      # The smallest possible id should start at 20 (or even higher), because
      # ids below it are used by Kryo internally e.g. for built-in Java and
      # Scala types
      mappings {
        "defend.model.DefenceTower" = 20
        "defend.model.Position" = 21
        "defend.shard.FsmProtocol$AddExperience" = 22
        "defend.shard.FsmProtocol$ScheduledStateChangeAgUpdate" = 23
        "defend.shard.FsmProtocol$UpdateSelf" = 24
        "defend.shard.MessageLostTracker$LastMessageId" = 25
        "java.util.Date" = 26
        "scala.None$" = 27
        "scala.Some" = 28
        "defend.game.GameEngine$Protocol$RocketFired" = 29
        "defend.model.HumanMissile" = 30
        "defend.model.MoveVector" = 31
        "defend.PersistenceMonitor$Save" = 32
      }
    }
  }

  remote {
    enabled-transports = [akka.remote.netty.tcp]
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = ${HOST}
      port = ${PORT}
    }
  }

  cluster {
    auto-down-unreachable-after = 20s
    auto-down-unreachable-after = ${?AUTO_DOWN}
    seed-nodes = [${SEED_NODE}, ${SEED_NODE2} ]
//    akka.cluster.down-removal-margin = 10ms
  }


  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"


    extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]
  }

}
//cassandra-journal.contact-points=["127.0.0.1"]
cassandra-journal.contact-points = [${?CASSANDRA_HOST}]
//cassandra-snapshot-store.contact-points=["127.0.0.1"]
cassandra-snapshot-store.contact-points = [${?CASSANDRA_HOST}]
cassandra-journal.keyspace = rmd_journal
cassandra-snapshot-store.keyspace = rmd_snapshot
cassandra-snapshot-store.keyspace-autocreate = true


